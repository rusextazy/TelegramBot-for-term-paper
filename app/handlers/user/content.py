from aiogram import Router, F, Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiogram.filters import Command


from app.keyboards.reply import kb_menu, kb_exit
from app.text.main import information
from app.utils.state import Statement
from app.text.main import reply
from app.database.models import check_user_zayvka_to_db

router = Router()


@router.message(F.text.in_(("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–û—Ç–º–µ–Ω–∞", "–ú–µ–Ω—é")))
async def main_menu(msg: Message, state: FSMContext):
    await state.clear()
    await msg.reply(text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!", reply_markup=kb_menu)


@router.message(F.text == "‚òïÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏")
@router.message(Command("information"))
async def get_information(msg: Message):
    await msg.answer(text=information)


@router.message(F.text == "üë®‚Äçüíª –ü–æ–¥–∞—á–∞ –∑–∞—è–≤–ª–µ–Ω–∏—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ")
@router.message(Command("statement"))
async def get_statement(msg: Message, state: FSMContext):
    await msg.answer("–§–æ—Ä–º–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è (–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –±—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏)üëá\n"
                     "–í—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ.")
    await msg.answer("–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –§–ò–û —Ä–µ–±–µ–Ω–∫–∞.", reply_markup=kb_exit)
    await state.set_state(Statement.Child_Name)


@router.message(Statement.Child_Name)
async def get_name_child(msg: Message, state: FSMContext):
    if len(msg.text) <= 10:
        await msg.answer(text="–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –¥—É–º–∞—é —á—Ç–æ —É –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞ —Ç–∞–∫–æ–µ –§–ò–û")
    else:
        await state.update_data(child_name=msg.text)
        child_name = await state.get_data()
        print(child_name['child_name'])
        await msg.answer(text="–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è —Ä–µ–±–µ–Ω–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 11.02.2005")
        await state.set_state(Statement.Child_DateOfBirth)


@router.message(Statement.Child_DateOfBirth)
async def get_data_child(msg: Message, state: FSMContext):
    if len(msg.text) <= 9 or len(msg.text) >= 11:
        await msg.answer(text="–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∫–æ—Ä—Ä–µ–∫—Ç–Ω–µ–µ! –ü—Ä–∏–º–µ—Ä: 11.02.2005")
    else:
        await state.update_data(child_data=msg.text)
        child_data = await state.get_data()
        print(child_data['child_data'])
        await msg.answer(text="–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ –æ–±—É—á–µ–Ω–∏—è —Ä–µ–±–µ–Ω–∫–∞ (–®–∫–æ–ª–∞/–î–µ—Ç—Å–∫–∏–π —Å–∞–¥–∏–∫/–ö–æ–ª–ª–µ–¥–∂, –∫ –ø—Ä–∏–º–µ—Ä—É "
                              "–®–∫–æ–ª–∞ ‚Ññ8 –∏–ª–∏ –∂–µ –ù–∏–∂–Ω–µ–∫–∞–º—Å–∫–∏–π –ø–æ–ª–∏—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∫–æ–ª–ª–µ–¥–∂ –∏–º–µ–Ω–∏ –ï.–ù.–ö–æ—Ä–æ–ª—ë–≤–∞)")
        await state.set_state(Statement.Child_Education)


@router.message(Statement.Child_Education)
async def get_education_child(msg: Message, state: FSMContext):
    await state.update_data(child_education=msg.text)
    child_education = await state.get_data()
    print(child_education['child_education'])
    await msg.answer(text="–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ä–µ–±–µ–Ω–∫–∞ (–ï—Å–ª–∏ –Ω–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ: –ù–µ—Ç)\n"
                          "–§–æ—Ä–º–∞—Ç: 89503352178")
    await state.set_state(Statement.Child_Contacts)


@router.message(Statement.Child_Contacts)
async def get_contacts_child(msg: Message, state: FSMContext):
    await state.update_data(child_contacts=msg.text)
    child_contacts = await state.get_data()
    print(child_contacts['child_contacts'])
    await msg.answer(text="–í–≤–µ–¥–∏—Ç–µ –§–ò–û (–ø–æ–ª–Ω–æ–µ) –º–∞–º—ã")
    await state.set_state(Statement.Mother_Name)


@router.message(Statement.Mother_Name)
async def get_name_mother(msg: Message, state: FSMContext):
    await state.update_data(mother_name=msg.text)
    mother_name = await state.get_data()
    print(mother_name['mother_name'])
    await msg.answer(text="–í–≤–µ–¥–∏—Ç–µ –§–ò–û (–ø–æ–ª–Ω–æ–µ) –ø–∞–ø—ã")
    await state.set_state(Statement.Father_Name)


@router.message(Statement.Father_Name)
async def get_name_father(msg: Message, state: FSMContext):
    await state.update_data(father_name=msg.text)
    father_name = await state.get_data()
    print(father_name['father_name'])
    await msg.answer(text="–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏ —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏ "
                          "–§–æ—Ä–º–∞—Ç: 89503352178")
    await state.set_state(Statement.Parents_Contacts)


@router.message(Statement.Parents_Contacts)
async def get_parents_contacts(msg: Message, bot: Bot, state: FSMContext):
    if len(msg.text) <= 10 or len(msg.text) >= 12:
        await msg.answer(text="–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
                              "–§–æ—Ä–º–∞—Ç: 89503352178")
    else:
        await state.update_data(parents_contacts=msg.text)
        child_name = await state.get_data()
        child_data = await state.get_data()
        child_education = await state.get_data()
        child_contacts = await state.get_data()
        mother_name = await state.get_data()
        father_name = await state.get_data()
        parents_contacts = await state.get_data()
        get_child_name = child_name['child_name']
        get_child_data = child_data['child_data']
        get_child_education = child_education['child_education']
        get_child_contacts = child_contacts['child_contacts']
        get_mother_name = mother_name['mother_name']
        get_father_name = father_name['father_name']
        get_parents_contact = parents_contacts['parents_contacts']
        await check_user_zayvka_to_db(get_child_name, get_child_data, get_child_education, get_child_contacts, get_mother_name, get_father_name, get_parents_contact)
        await msg.answer(text="–í–∞—à–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –°–ø–∞—Å–∏–±–æ –∏ –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞!", reply_markup=kb_menu)
        await bot.send_message(chat_id="-1001993774077", text=reply.format(id=msg.from_user.username, Child_Name=get_child_name, Child_DateOfBirth=get_child_data,
                                                                           Child_Education=get_child_education, Child_Contacts=get_child_contacts,
                                                                           Mother_Name=get_mother_name, Father_Name=get_father_name,
                                                                           Parents_Contacts=get_parents_contact))
        await state.clear()
